package uz.gita.musicplayerapp.presentor.screen.homeimport org.orbitmvi.orbit.ContainerHostimport uz.gita.musicplayerapp.data.models.AudioModelimport uz.gita.musicplayerapp.data.models.defaultAudioModelinterface MainContract {    interface ViewModel {        interface ScreenModel : ContainerHost<UIState, SideEffect>        fun onEventDispatcher(event: Event)    }    data class UIState(        val duration: Long = 0,        val progress: Float = 0f,        val progressString: String = "00:00",        val isAudioPlaying: Boolean = false,        val audioList: List<AudioModel> = emptyList(),        val currentAudioModel: AudioModel = defaultAudioModel,    )    sealed interface SideEffect {        object Init : SideEffect    }    interface Event {        object Init : Event        object LoadAudioData : Event        object onStart : Event        object onNext : Event        object onPrev : Event        data class OnItemClick(val index: Int) : Event        object MoveToPlay : Event    }}